// Generated by BUCKLESCRIPT VERSION 5.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/lib/js/src/Json_encode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var Presence = /* module */Block.localModule([], []);

function op_of_payload(payload) {
  if (typeof payload === "number") {
    return 11;
  } else {
    switch (payload.tag | 0) {
      case 0 : 
          return 1;
      case 1 : 
          return 2;
      case 2 : 
          return 10;
      
    }
  }
}

var NotImplemented = Caml_exceptions.create("Data-Record.NotImplemented");

function hello(json) {
  return /* Hello */Block.variant("Hello", 2, [/* record */Block.record([
                "heartbeat_interval",
                "trace"
              ], [
                Json_decode.field("heartbeat_interval", Json_decode.$$int, json),
                Json_decode.field("_trace", (function (param) {
                        return Json_decode.array(Json_decode.string, param);
                      }), json)
              ])]);
}

function data(json) {
  var match = Json_decode.field("op", Json_decode.$$int, json);
  var tmp;
  if (match !== 10) {
    if (match !== 11) {
      throw NotImplemented;
    } else {
      tmp = (function (param) {
          return /* Ack */0;
        });
    }
  } else {
    tmp = hello;
  }
  return /* record */Block.record([
            "op",
            "d",
            "s",
            "t"
          ], [
            Json_decode.field("op", Json_decode.$$int, json),
            Json_decode.field("d", tmp, json),
            Json_decode.optional((function (param) {
                    return Json_decode.field("s", Json_decode.$$int, param);
                  }), json),
            Json_decode.optional((function (param) {
                    return Json_decode.field("t", Json_decode.string, param);
                  }), json)
          ]);
}

var Decode = /* module */Block.localModule([
    "hello",
    "data"
  ], [
    hello,
    data
  ]);

function optional(encoder, r) {
  if (r !== undefined) {
    return Caml_option.some(Curry._1(encoder, Caml_option.valFromOption(r)));
  }
  
}

function object__(fields) {
  return Json_encode.object_(List.fold_right((function (b, a) {
                    var match = b[1];
                    if (match !== undefined) {
                      return /* :: */Block.simpleVariant("::", [
                                /* tuple */[
                                  b[0],
                                  Caml_option.valFromOption(match)
                                ],
                                a
                              ]);
                    } else {
                      return a;
                    }
                  }), fields, /* [] */0));
}

function activityTimestamps(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "start",
                  Json_encode.nullable((function (prim) {
                          return prim;
                        }), r[/* start */0])
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "end",
                      Json_encode.nullable((function (prim) {
                              return prim;
                            }), r[/* end_ */1])
                    ],
                    /* [] */0
                  ])
              ]));
}

function activityParty(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "id",
                  Json_encode.nullable((function (prim) {
                          return prim;
                        }), r[/* id */0])
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "size",
                      Json_encode.nullable((function (param) {
                              return Json_encode.array((function (prim) {
                                            return prim;
                                          }), param);
                            }), r[/* size */1])
                    ],
                    /* [] */0
                  ])
              ]));
}

function activityAssets(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "large_image",
                  Json_encode.nullable((function (prim) {
                          return prim;
                        }), r[/* large_image */0])
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "large_text",
                      Json_encode.nullable((function (prim) {
                              return prim;
                            }), r[/* large_text */1])
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "small_image",
                          Json_encode.nullable((function (prim) {
                                  return prim;
                                }), r[/* small_image */2])
                        ],
                        /* :: */Block.simpleVariant("::", [
                            /* tuple */[
                              "small_text",
                              Json_encode.nullable((function (prim) {
                                      return prim;
                                    }), r[/* small_text */3])
                            ],
                            /* [] */0
                          ])
                      ])
                  ])
              ]));
}

function activitySecrets(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "join",
                  Json_encode.nullable((function (prim) {
                          return prim;
                        }), r[/* join */0])
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "spectate",
                      Json_encode.nullable((function (prim) {
                              return prim;
                            }), r[/* spectate */1])
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "match",
                          Json_encode.nullable((function (prim) {
                                  return prim;
                                }), r[/* match */2])
                        ],
                        /* [] */0
                      ])
                  ])
              ]));
}

function activity(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "name",
                  r[/* name */0]
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "type",
                      r[/* type_ */1]
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "url",
                          Json_encode.nullable((function (prim) {
                                  return prim;
                                }), r[/* url */2])
                        ],
                        /* :: */Block.simpleVariant("::", [
                            /* tuple */[
                              "timestamps",
                              Json_encode.nullable(activityTimestamps, r[/* timestamps */3])
                            ],
                            /* :: */Block.simpleVariant("::", [
                                /* tuple */[
                                  "application_id",
                                  Json_encode.nullable((function (prim) {
                                          return prim;
                                        }), r[/* application_id */4])
                                ],
                                /* :: */Block.simpleVariant("::", [
                                    /* tuple */[
                                      "details",
                                      Json_encode.nullable((function (prim) {
                                              return prim;
                                            }), r[/* details */5])
                                    ],
                                    /* :: */Block.simpleVariant("::", [
                                        /* tuple */[
                                          "state",
                                          Json_encode.nullable((function (prim) {
                                                  return prim;
                                                }), r[/* state */6])
                                        ],
                                        /* :: */Block.simpleVariant("::", [
                                            /* tuple */[
                                              "party",
                                              Json_encode.nullable(activityParty, r[/* party */7])
                                            ],
                                            /* :: */Block.simpleVariant("::", [
                                                /* tuple */[
                                                  "assets",
                                                  Json_encode.nullable(activityAssets, r[/* assets */8])
                                                ],
                                                /* :: */Block.simpleVariant("::", [
                                                    /* tuple */[
                                                      "secrets",
                                                      Json_encode.nullable(activitySecrets, r[/* secrets */9])
                                                    ],
                                                    /* :: */Block.simpleVariant("::", [
                                                        /* tuple */[
                                                          "instance",
                                                          Json_encode.nullable((function (prim) {
                                                                  return prim;
                                                                }), r[/* instance */10])
                                                        ],
                                                        /* :: */Block.simpleVariant("::", [
                                                            /* tuple */[
                                                              "flags",
                                                              Json_encode.nullable((function (prim) {
                                                                      return prim;
                                                                    }), r[/* flags */11])
                                                            ],
                                                            /* [] */0
                                                          ])
                                                      ])
                                                  ])
                                              ])
                                          ])
                                      ])
                                  ])
                              ])
                          ])
                      ])
                  ])
              ]));
}

var Presence$1 = /* module */Block.localModule([
    "activityTimestamps",
    "activityParty",
    "activityAssets",
    "activitySecrets",
    "activity"
  ], [
    activityTimestamps,
    activityParty,
    activityAssets,
    activitySecrets,
    activity
  ]);

function updateStatus(r) {
  return object__(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "since",
                  optional((function (prim) {
                          return prim;
                        }), r[/* since */0])
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "game",
                      optional(activity, r[/* game */1])
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "status",
                          Caml_option.some(r[/* status */2])
                        ],
                        /* :: */Block.simpleVariant("::", [
                            /* tuple */[
                              "afk",
                              Caml_option.some(r[/* afk */3])
                            ],
                            /* [] */0
                          ])
                      ])
                  ])
              ]));
}

function heartbeat(param) {
  return Json_encode.nullable((function (prim) {
                return prim;
              }), param);
}

function props(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "$os",
                  r[/* os */0]
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "$browser",
                      r[/* browser */1]
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "$device",
                          r[/* device */2]
                        ],
                        /* [] */0
                      ])
                  ])
              ]));
}

function identify(r) {
  return object__(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "token",
                  Caml_option.some(r[/* token */0])
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "properties",
                      Caml_option.some(props(r[/* properties */1]))
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "compress",
                          optional((function (prim) {
                                  return prim;
                                }), r[/* compress */2])
                        ],
                        /* :: */Block.simpleVariant("::", [
                            /* tuple */[
                              "large_threshold",
                              optional((function (prim) {
                                      return prim;
                                    }), r[/* large_threshold */3])
                            ],
                            /* :: */Block.simpleVariant("::", [
                                /* tuple */[
                                  "shard",
                                  optional((function (param) {
                                          return Json_encode.array((function (prim) {
                                                        return prim;
                                                      }), param);
                                        }), r[/* shard */4])
                                ],
                                /* :: */Block.simpleVariant("::", [
                                    /* tuple */[
                                      "presence",
                                      optional(updateStatus, r[/* presence */5])
                                    ],
                                    /* [] */0
                                  ])
                              ])
                          ])
                      ])
                  ])
              ]));
}

function hello$1(r) {
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "heartbeat_interval",
                  r[/* heartbeat_interval */0]
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "_trace",
                      Json_encode.array((function (prim) {
                              return prim;
                            }), r[/* trace */1])
                    ],
                    /* [] */0
                  ])
              ]));
}

function data$1(r) {
  var match = r[/* d */1];
  var tmp;
  if (typeof match === "number") {
    tmp = null;
  } else {
    switch (match.tag | 0) {
      case 0 : 
          tmp = Json_encode.nullable((function (prim) {
                  return prim;
                }), match[0]);
          break;
      case 1 : 
          tmp = identify(match[0]);
          break;
      case 2 : 
          tmp = hello$1(match[0]);
          break;
      
    }
  }
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "op",
                  r[/* op */0]
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "d",
                      tmp
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "s",
                          Json_encode.nullable((function (prim) {
                                  return prim;
                                }), r[/* s */2])
                        ],
                        /* :: */Block.simpleVariant("::", [
                            /* tuple */[
                              "t",
                              Json_encode.nullable((function (prim) {
                                      return prim;
                                    }), r[/* t */3])
                            ],
                            /* [] */0
                          ])
                      ])
                  ])
              ]));
}

function dataFromPayload(r) {
  var tmp;
  if (typeof r === "number") {
    tmp = null;
  } else {
    switch (r.tag | 0) {
      case 0 : 
          tmp = Json_encode.nullable((function (prim) {
                  return prim;
                }), r[0]);
          break;
      case 1 : 
          tmp = identify(r[0]);
          break;
      case 2 : 
          tmp = hello$1(r[0]);
          break;
      
    }
  }
  return Json_encode.object_(/* :: */Block.simpleVariant("::", [
                /* tuple */[
                  "op",
                  op_of_payload(r)
                ],
                /* :: */Block.simpleVariant("::", [
                    /* tuple */[
                      "d",
                      tmp
                    ],
                    /* :: */Block.simpleVariant("::", [
                        /* tuple */[
                          "s",
                          null
                        ],
                        /* :: */Block.simpleVariant("::", [
                            /* tuple */[
                              "t",
                              null
                            ],
                            /* [] */0
                          ])
                      ])
                  ])
              ]));
}

var Encode = /* module */Block.localModule([
    "optional",
    "object__",
    "Presence",
    "updateStatus",
    "heartbeat",
    "props",
    "identify",
    "hello",
    "data",
    "dataFromPayload"
  ], [
    optional,
    object__,
    Presence$1,
    updateStatus,
    heartbeat,
    props,
    identify,
    hello$1,
    data$1,
    dataFromPayload
  ]);

exports.Presence = Presence;
exports.op_of_payload = op_of_payload;
exports.NotImplemented = NotImplemented;
exports.Decode = Decode;
exports.Encode = Encode;
/* No side effect */
